{"version":3,"sources":["components/ForecastCard.js","components/WeatherForecast.js","utils/genHatMsg.js","utils/genShoesMsg.js","utils/genAccessories.js","utils/genClothing.js","utils/genCoatMsg.js","components/Recommendations.js","utils/genEmoji.js","components/UnitToggle.js","components/Loading.js","components/WeatherCard.js","components/theme.js","components/Navbar.js","components/Login.jsx","components/Register.jsx","components/Welcome.jsx","components/CityList.jsx","App.js","reportWebVitals.js","index.js","images/sky.jpg","images/Clear.jpg","images/Cloudy.jpg","images/Rainy.jpg","images/snow.jpg","images/fog.png","images/Stormy.jpg"],"names":["ForecastCard","_ref","forecast","React","createElement","Box","className","sx","textAlign","my","Typography","variant","Date","dt_txt","toLocaleDateString","weekday","concat","main","temp","humidity","wind","speed","src","weather","icon","alt","width","height","mt","WeatherForecast","forecasts","Grid","container","spacing","justifyContent","map","index","item","key","genHatMsg","weatherDescription","windSpeed","genShoesMsg","lowestTemp","genAccessories","genClothing","temperature","rainIntensity","genCoatMsg","Recommendations","weatherData","temp_min","description","rain","style","display","Card","maxWidth","backgroundColor","shadowOpacity","mb","genEmoji","UnitToggle","unit","onUnitChange","ButtonGroup","aria-label","Button","onClick","Loading","alignItems","minHeight","CircularProgress","WeatherCard","city","setCity","useState","setWeatherData","forecastData","setForecastData","temperatureUnit","setTemperatureUnit","loading","setLoading","backgroundImage","setBackgroundImage","Clear","apiKey","process","backgroundSize","backgroundPosition","flexDirection","color","textShadow","transition","Container","borderRadius","padding","TextField","id","label","fullWidth","value","onChange","e","target","async","response","fetch","ok","status","Error","data","json","condition","toLowerCase","newBackgroundImage","includes","Cloudy","Rainy","Snow","Fog","Stormy","sky","forecastResponse","list","filter","error","console","message","component","name","Math","round","theme","createTheme","palette","primary","secondary","text","typography","fontFamily","h2","h6","button","Navbar","isAuthenticated","onLogout","AppBar","position","Toolbar","IconButton","edge","flexGrow","RouterLink","to","Fragment","Login","setIsAuthenticated","username","setUsername","password","setPassword","setMessage","navigate","useNavigate","useEffect","token","localStorage","getItem","axios","get","headers","Authorization","log","verifyToken","marginTop","margin","required","autoComplete","autoFocus","InputProps","type","post","setItem","Link","Register","_error$response","_error$response$data","errorMessage","Welcome","gutterBottom","CityList","cities","setCities","fetchCities","length","weatherDataPromises","weatherDataObject","Promise","all","reduce","acc","curr","fetchWeatherData","xs","sm","md","_id","p","borderColor","CardContent","App","Router","ThemeProvider","CssBaseline","handleLogout","removeItem","Routes","Route","path","element","Navigate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.41da4f2a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, Box } from \"@mui/material\";\r\n\r\nconst ForecastCard = ({ forecast }) => {\r\n  return (\r\n    <Box className=\"forecast-item\" sx={{ textAlign: \"center\", my: 2 }}>\r\n      <Typography variant=\"h6\">\r\n        {new Date(forecast.dt_txt).toLocaleDateString(\"en-US\", {\r\n          weekday: \"short\",\r\n        })}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{`Temperature: ${forecast.main.temp}°C`}</Typography>\r\n      <Typography variant=\"body2\">{`Humidity: ${forecast.main.humidity}%`}</Typography>\r\n      <Typography variant=\"body2\">{`Wind Speed: ${forecast.wind.speed} km/h`}</Typography>\r\n      <img\r\n        src={`https://openweathermap.org/img/w/${forecast.weather[0].icon}.png`}\r\n        alt=\"Weather Icon\"\r\n        sx={{ width: 50, height: \"auto\", mt: 1 }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport ForecastCard from \"./ForecastCard\";\r\n\r\nconst WeatherForecast = ({ forecasts }) => {\r\n  return (\r\n    <div>\r\n      <h3> Weather Forecast of coming days: </h3>\r\n      <Grid container spacing={2} justifyContent=\"center\">\r\n        {forecasts.map((forecast, index) => (\r\n          <Grid item key={index}>\r\n            <ForecastCard forecast={forecast} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;\r\n","const genHatMsg = (weatherDescription, windSpeed) => {\r\n    if (weatherDescription === 'Clear') {\r\n        return \"Nice weather today, you might not need a hat today.\";\r\n    } else if (weatherDescription === 'Rain' || weatherDescription === 'Drizzle') {\r\n        return \"Rain is expected today, consider bringing a waterproof hat.\";\r\n    } else if (windSpeed > 15) {\r\n        return \"Windy conditions are expected, a hat or cap can help.\";\r\n    } else {\r\n        return \"You might consider a hat today but its not mandatory.\";\r\n    }\r\n};\r\n\r\nexport default genHatMsg;\r\n\r\n","const genShoesMsg = (weatherDescription, lowestTemp) => {\r\n    if (weatherDescription === 'Clear') {\r\n        if (lowestTemp > 25) {\r\n            return \"Sandals or breathable shoes are recommended.\";\r\n        } else {\r\n            return \"Any standard shoes are suitable today.\";\r\n        }\r\n    } else if (weatherDescription === 'Rain' || weatherDescription === 'Drizzle') {\r\n        return \"Rain is expected today, waterproof or water-resistant shoes are advised.\";\r\n    } else {\r\n        return \"Nice weather, You can wear any comfortable shoes today.\";\r\n    }\r\n};\r\n\r\nexport default genShoesMsg;\r\n","const genAccessories = (weatherDescription, humidity) => {\r\n  if (weatherDescription === \"Clear\") {\r\n    return \"Consider wearing sunglasses or a light scarf today. Have a great day!\";\r\n  } else if (\r\n    weatherDescription === \"Rain\" ||\r\n    weatherDescription === \"Drizzle\"\r\n  ) {\r\n    return \"Rain expected, an umbrella or raincoat is recommended today. Have a great day!\";\r\n  } else if (humidity > 70) {\r\n    return \"Humid weather, consider a light hat or scarf today. Have a great day!\";\r\n  } else {\r\n    return \" Carry a light scarf or sunglasses today. Have a great day!\";\r\n  }\r\n};\r\n\r\nexport default genAccessories;\r\n","const genClothing = (temperature, windSpeed, rainIntensity) => {\r\n    if (temperature < 5) {\r\n        return \"It's very cold today, wear a heavy coat and multiple layers.\";\r\n    } else if (temperature >= 5 && temperature < 15) {\r\n        if (rainIntensity > 0.5) {\r\n            return \"Cool weather with rain, wear a raincoat or waterproof jacket today.\";\r\n        } else {\r\n            return \"Cool weather today, wear a light jacket or sweater.\";\r\n        }\r\n    } else if (temperature >= 15 && temperature < 25) {\r\n        if (windSpeed > 15) {\r\n            return \"Breezy conditions today, wear a windbreaker or light jacket.\";\r\n        } else {\r\n            return \" A T-shirt with light layers is sufficient today.\";\r\n        }\r\n    } else {\r\n        return \"Hot weather today, wear light and breathable clothing.\";\r\n    }\r\n};\r\n\r\nexport default genClothing;\r\n","const genCoatMsg = (rainIntensity) => {\r\n    if (rainIntensity > 0.5) {\r\n        return \"Heavy rain expected today, bring a waterproof coat or umbrella.\";\r\n    } else if (rainIntensity > 0.2) {\r\n        return \"Light rain expected today, consider carrying a raincoat or umbrella.\";\r\n    } else {\r\n        return \"Less chances of rain today, coat is optional.\";\r\n    }\r\n};\r\n\r\nexport default genCoatMsg;\r\n","import React from \"react\";\r\nimport { Typography, Grid, Card } from \"@mui/material\";\r\nimport genHatMsg from \"../utils/genHatMsg\";\r\nimport genShoesMsg from \"../utils/genShoesMsg\";\r\nimport genAccessories from \"../utils/genAccessories\";\r\nimport genClothing from \"../utils/genClothing\";\r\nimport genCoatMsg from \"../utils/genCoatMsg\";\r\n\r\nconst Recommendations = ({ weatherData }) => {\r\n  if (!weatherData) return null;\r\n\r\n  //const { weather, wind } = weatherData;\r\n  const { main, weather, wind } = weatherData;\r\n  const lowestTemp = main.temp_min;\r\n  //const highestTemp = main.temp_max;\r\n  //const precipType = weather[0].main;\r\n  const windSpeed = wind.speed;\r\n  const weatherDescription = weather[0].description;\r\n  const humidity = main.humidity;\r\n  const rain = weatherData.rain;\r\n  const rainIntensity = rain ? rain[\"1h\"] || rain[\"3h\"] || 0 : 0;\r\n\r\n  return (\r\n    <Grid sx={{ mt: 4 }} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Card\r\n        sx={{ maxWidth: 500, backgroundColor: \"transparent\", shadowOpacity: 0 }}\r\n      >\r\n        <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n          Recommendations:\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          Hat: {genHatMsg(weatherDescription, windSpeed)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          Cloths: {genClothing(lowestTemp, windSpeed, rainIntensity)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          Jackets: {genCoatMsg(rainIntensity)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          Accessories: {genAccessories(weatherDescription, humidity)}\r\n        </Typography>\r\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n          Shoes: {genShoesMsg(weatherDescription, lowestTemp)}\r\n        </Typography>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n","const genEmoji = (icon) => {\r\n    return {\r\n        \"01d\": \"☀️\",   // clear sky day\r\n        \"01n\": \"🌕\",   // clear sky night\r\n        \"02d\": \"⛅️\",   // few clouds day\r\n        \"02n\": \"🌙\",   // few clouds night\r\n        \"03d\": \"🌥️\",   // scattered clouds day\r\n        \"03n\": \"🌥️\",   // scattered clouds night\r\n        \"04d\": \"☁️\",   // broken clouds day\r\n        \"04n\": \"☁️\",   // broken clouds night\r\n        \"09d\": \"🌧️\",   // shower rain day\r\n        \"09n\": \"🌧️\",   // shower rain night\r\n        \"10d\": \"🌦️\",   // rain day\r\n        \"10n\": \"🌧️\",   // rain night\r\n        \"11d\": \"⛈️\",   // thunderstorm day\r\n        \"11n\": \"⛈️\",   // thunderstorm night\r\n        \"13d\": \"🌨️\",   // snow day\r\n        \"13n\": \"🌨️\",   // snow night\r\n        \"50d\": \"🌫️\",   // mist day\r\n        \"50n\": \"🌫️\"    // mist night\r\n    }[icon];\r\n};\r\n\r\nexport default genEmoji;\r\n","// src/components/UnitToggle.js\r\nimport React from \"react\";\r\nimport { ButtonGroup, Button, Box } from \"@mui/material\";\r\n\r\nconst UnitToggle = ({ unit, onUnitChange }) => {\r\n  return (\r\n    <Box sx={{ mb: 2, textAlign: \"center\" }}>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={() => onUnitChange(\"metric\")}\r\n          variant={unit === \"metric\" ? \"contained\" : \"outlined\"}\r\n        >\r\n          °C\r\n        </Button>\r\n        <Button\r\n          onClick={() => onUnitChange(\"imperial\")}\r\n          variant={unit === \"imperial\" ? \"contained\" : \"outlined\"}\r\n        >\r\n          °F\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UnitToggle;\r\n","// src/components/Loading.js\r\nimport React from \"react\";\r\nimport { Box, CircularProgress } from \"@mui/material\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button, Typography, Box, Container } from \"@mui/material\";\r\nimport WeatherForecast from \"./WeatherForecast\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport genEmoji from \"../utils/genEmoji\";\r\nimport UnitToggle from \"./UnitToggle\";\r\nimport Clear from \"../images/Clear.jpg\";\r\nimport Cloudy from \"../images/Cloudy.jpg\";\r\nimport Rainy from \"../images/Rainy.jpg\";\r\nimport Snow from \"../images/snow.jpg\";\r\nimport Fog from \"../images/fog.png\";\r\nimport Stormy from \"../images/Stormy.jpg\";\r\nimport sky from \"../images/sky.jpg\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst WeatherCard = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [temperatureUnit, setTemperatureUnit] = useState(\"metric\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [backgroundImage, setBackgroundImage] = useState(Clear);\r\n\r\n  //const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n  const apiUrl = \"https://api.openweathermap.org/data/2.5/weather\";\r\n  const forecastUrl = \"https://api.openweathermap.org/data/2.5/forecast\";\r\n\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${apiUrl}?q=${city}&appid=${apiKey}&units=metric`\r\n      );\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          throw new Error(\"Unauthorized - Please check your API key\");\r\n        } else if (response.status === 404) {\r\n          throw new Error(\"City not found\");\r\n        } else {\r\n          throw new Error(\"Failed to fetch weather data\");\r\n        }\r\n      }\r\n      const data = await response.json();\r\n      setWeatherData(data);\r\n\r\n      // Update background image based on weather conditions\r\n      const condition = data.weather[0].description.toLowerCase();\r\n      let newBackgroundImage = Clear;\r\n      if (condition.includes(\"clear\")) {\r\n        newBackgroundImage = Clear;\r\n      } else if (condition.includes(\"cloud\")) {\r\n        newBackgroundImage = Cloudy;\r\n      } else if (condition.includes(\"rain\") || condition.includes(\"shower\")) {\r\n        newBackgroundImage = Rainy;\r\n      } else if (condition.includes(\"snow\")) {\r\n        newBackgroundImage = Snow;\r\n      } else if (condition.includes(\"fog\")) {\r\n        newBackgroundImage = Fog;\r\n      } else if (condition.includes(\"thunder\") || condition.includes(\"storm\")) {\r\n        newBackgroundImage = Stormy;\r\n      } else {\r\n        newBackgroundImage = sky;\r\n      }\r\n      //setImageLoaded(false); // Reset the image loaded state\r\n      setBackgroundImage(newBackgroundImage);\r\n\r\n      const forecastResponse = await fetch(\r\n        `${forecastUrl}?q=${city}&appid=${apiKey}&units=metric`\r\n      );\r\n      if (!forecastResponse.ok) {\r\n        if (forecastResponse.status === 401) {\r\n          throw new Error(\"Unauthorized - Please check your API key\");\r\n        } else if (forecastResponse.status === 404) {\r\n          throw new Error(\"Forecast data not available\");\r\n        } else {\r\n          throw new Error(\"Failed to fetch forecast data\");\r\n        }\r\n      }\r\n      const forecastData = await forecastResponse.json();\r\n      const forecasts = forecastData.list.filter(\r\n        (item, index) => index % 8 === 0\r\n      );\r\n      setForecastData(forecasts);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const handleTemperatureUnitChange = (unit) => {\r\n    setTemperatureUnit(unit);\r\n  };\r\n  const convertTemperature = (temp) => {\r\n    if (temperatureUnit === \"imperial\") {\r\n      return `${Math.round((temp * 9) / 5 + 32)}°F`;\r\n    } else {\r\n      return `${Math.round(temp)}°C`;\r\n    }\r\n  };\r\n  /* useEffect(() => {\r\n    const img = new Image();\r\n    img.src = backgroundImage;\r\n    img.onload = () => setImageLoaded(true);\r\n  }, [backgroundImage]); */\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        //backgroundImage: imageLoaded ? `url(${backgroundImage})` : \"none\",\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"white\",\r\n        textShadow: \"1px 1px 4px rgba(0,0,0,0.8)\",\r\n        transition: \"background-image 0.5s ease-in-out\",\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"md\"\r\n        sx={{\r\n          backgroundColor: \"rgba(0, 0, 0, 0.2)\",\r\n          borderRadius: \"8px\",\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <Box sx={{ mt: 4 }}>\r\n          <TextField\r\n            id=\"search-input\"\r\n            label=\"Enter a city name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Button\r\n            id=\"search-button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSearch}\r\n            sx={{ mb: 2 }}\r\n          >\r\n            Search\r\n          </Button>{\" \"}\r\n          {/*  <Button\r\n            id=\"search-button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => navigate(\"/\")}\r\n            sx={{ mt: -2 }}\r\n          >\r\n            Back\r\n          </Button> */}\r\n          {loading && <Loading />}\r\n          {weatherData && !loading && (\r\n            <Box id=\"weather-container\" sx={{ textAlign: \"center\" }}>\r\n              <Typography variant=\"h4\" component=\"h2\" sx={{ mt: 2 }}>\r\n                {weatherData.name}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {`Temperature: ${convertTemperature(weatherData.main.temp)}`}\r\n                <UnitToggle\r\n                  unit={temperatureUnit}\r\n                  onUnitChange={handleTemperatureUnitChange}\r\n                />\r\n              </Typography>\r\n              <Typography variant=\"body1\">{`Humidity: ${weatherData.main.humidity}%`}</Typography>\r\n              <Typography variant=\"body1\">{`Wind Speed: ${weatherData.wind.speed} km/h`}</Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {genEmoji(weatherData.weather[0].icon)}{\" \"}\r\n                {weatherData.weather[0].description}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n        <Box sx={{ textAlign: \"center\" }}>\r\n          <Recommendations weatherData={weatherData} />\r\n          {forecastData && <WeatherForecast forecasts={forecastData} />}\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#007bff\",\r\n    },\r\n    secondary: {\r\n      main: \"#ff4081\",\r\n    },\r\n    text: {\r\n      primary: \"#ffffff\", // White text for better contrast on dark background\r\n      secondary: \"#000000\", // Black text for light backgrounds\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Georgia, serif\",\r\n    h2: {\r\n      color: \"#ffffff\", // White text for h2 headers\r\n      textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\", // Adding shadow for better readability\r\n    },\r\n    h6: {\r\n      color: \"#ffffff\", // White text for h6 headers\r\n      textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\", // Adding shadow for better readability\r\n    },\r\n    button: {\r\n      color: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// src/components/Navbar.jsx\r\nimport React from \"react\";\r\nimport { AppBar, Toolbar, Typography, IconButton, Button } from \"@mui/material\";\r\n//import MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ isAuthenticated, onLogout }) => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          {/* <MenuIcon /> */}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Weather & Dress Recommendation Dashboard\r\n        </Typography>\r\n        <Button component={RouterLink} to=\"/\" color=\"inherit\">\r\n          Home\r\n        </Button>\r\n        {/* <Button component={RouterLink} to=\"/weather\" color=\"inherit\">\r\n          Weather\r\n        </Button> */}\r\n        {!isAuthenticated ? (\r\n          <>\r\n            <Button component={RouterLink} to=\"/login\" color=\"inherit\">\r\n              Login\r\n            </Button>\r\n            <Button component={RouterLink} to=\"/register\" color=\"inherit\">\r\n              Register\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button color=\"inherit\" onClick={onLogout}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","// src/components/Login.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Container, Typography, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { username, password });\r\n      setMessage('Login successful');\r\n      localStorage.setItem('token', response.data.token);\r\n      setIsAuthenticated(true);\r\n      navigate('/welcome');\r\n    } catch (error) {\r\n      setMessage('Login failed, If you are new User, try registration first: ');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n  const verifyToken = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const response = await axios.get('http://localhost:3000/api/auth/verify', {\r\n          //{ Authorization: token }\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        console.log('Token is valid:', response.data);\r\n        //new step\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error.response ? error.response.data : error.message);\r\n      setIsAuthenticated(false);\r\n      //navigate('/login'); // Redirect to login if token verification fails\r\n    }\r\n  };\r\n    verifyToken();\r\n  }, [setIsAuthenticated]); \r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          InputProps={{\r\n            style: {\r\n              color: 'black',\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            style: {\r\n              color: 'black',\r\n            },\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          onClick={handleLogin}\r\n        >\r\n          Login\r\n        </Button>\r\n        {message && <Typography color=\"error\">{message}</Typography>}\r\n        {/* Link to navigate to /welcome */}\r\n        <Link to=\"/welcome\" variant=\"body2\">\r\n          Go to Welcome Page\r\n        </Link>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField, Container, Typography, Box } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/auth/register\", {\r\n        username,\r\n        password,\r\n      });\r\n      setMessage(\"Registration successful. Please log in.\");\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \"An error occurred during registration.\";\r\n      setMessage(\"Registration failed: \" + error.response.data.message);\r\n      console.log(errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"username\"\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          InputProps={{\r\n            style: {\r\n              color: 'black',\r\n            },\r\n          }}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          InputProps={{\r\n            style: {\r\n              color: 'black',\r\n            },\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          onClick={handleRegister}\r\n        >\r\n          Register\r\n        </Button>\r\n        {message && <Typography color=\"error\">{message}</Typography>}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport { Container, TextField, Button, Typography, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Welcome = () => {\r\n  const [city, setCity] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleCityChange = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n\r\n  const handleCitySubmit = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:3000/api/cities', { name: city }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (response.status === 200) {\r\n        console.log(\"Token is valid\");\r\n        // Additional logic here\r\n      } else {\r\n        console.log(\"Token is invalid\");\r\n        // Handle error\r\n      }\r\n      setMessage('City saved successfully!');\r\n      setCity('');\r\n    } catch (error) {\r\n      console.error('Error saving city:', error);\r\n      setMessage('Error saving city');\r\n    }\r\n  };\r\n \r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          color: 'black',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n        Welcome\r\n      </Typography>\r\n        <Typography variant=\"body1\">\r\n          You are logged in. Please write your favoirite cities to see weather forcast!\r\n        </Typography>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"city\"\r\n          label=\"Favorite City\"\r\n          name=\"city\"\r\n          autoComplete=\"city\"\r\n          autoFocus\r\n          value={city}\r\n          onChange={handleCityChange}\r\n          InputProps={{\r\n            style: {\r\n              color: 'black',\r\n            },\r\n          }}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          onClick={handleCitySubmit}\r\n        >\r\n          Save City\r\n        </Button>\r\n        {message && <Typography color=\"error\">{message}</Typography>}\r\n        <Box mt={2}>\r\n        <Link to=\"/cities\">\r\n          <Button variant=\"contained\">View Favorite Cities</Button>\r\n        </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","// src/components/CityList.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, Grid, CardContent, CircularProgress, Card, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport sky from \"../images/sky.jpg\";\r\nimport Recommendations from './Recommendations';\r\n\r\nconst CityList = () => {\r\n  const [cities, setCities] = useState([]);\r\n  const [weatherData, setWeatherData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n  const apiUrl = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\n  useEffect(() => {\r\n    const fetchCities = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:3000/api/cities', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setCities(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching cities:', error);\r\n      }\r\n    };\r\n\r\n    fetchCities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      const weatherDataPromises = cities.map(async (city) => {\r\n        try {\r\n          const response = await axios.get(`${apiUrl}?q=${city.name}&appid=${apiKey}&units=metric`);\r\n          return { city: city.name, data: response.data };\r\n        } catch (error) {\r\n          console.error(`Error fetching weather data for ${city.name}:`, error);\r\n          return { city: city.name, data: null };\r\n        }\r\n      });\r\n      const weatherDataArray = await Promise.all(weatherDataPromises);\r\n      const weatherDataObject = weatherDataArray.reduce((acc, curr) => {\r\n        acc[curr.city] = curr.data;\r\n        return acc;\r\n      }, {});\r\n\r\n      setWeatherData(weatherDataObject);\r\n      setLoading(false);\r\n    };\r\n\r\n    if (cities.length > 0) {\r\n      fetchWeatherData();\r\n    }\r\n  }, [cities, apiKey]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container  \r\n    className=\"sky\"\r\n    style={{\r\n      backgroundImage: `url(${sky})`,\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      color: 'black',\r\n    }}>\r\n        <Box> \r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Favorite Cities and Weather Forecast\r\n      </Typography >\r\n      <Grid container spacing={3}>\r\n        {cities.map((city) => (\r\n           <Grid item xs={12} sm={6} md={4} key={city._id}>\r\n           <Card variant=\"outlined\"\r\n                    sx={{\r\n                      p: 2,\r\n                      mb: 2,\r\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)', \r\n                      color: 'black', // dark font color\r\n                      borderColor: 'rgba(255, 255, 255, 0.5)', \r\n                    }}>\r\n             <CardContent>\r\n               <Typography variant=\"h6\">{city.name}</Typography>\r\n            {weatherData[city.name] ? (\r\n              <Box>\r\n                <Card\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      p: 2,\r\n                      mb: 2,\r\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)', \r\n                      color: 'black', // dark font color\r\n                      borderColor: 'rgba(255, 255, 255, 0.5)', \r\n                    }} >\r\n                <Typography variant=\"h6\">Weather Data:</Typography>\r\n                <Typography variant=\"body2\">{`Temperature: ${weatherData[city.name].main.temp}°C`}</Typography>\r\n                <Typography variant=\"body2\">{`Humidity: ${weatherData[city.name].main.humidity}%`}</Typography>\r\n                <Typography variant=\"body2\">{`Wind Speed: ${weatherData[city.name].wind.speed} km/h`}</Typography>\r\n                <Typography variant=\"body2\">{weatherData[city.name].weather[0].description}</Typography>\r\n                </Card>\r\n                <Card variant=\"outlined\"\r\n                    sx={{\r\n                      p: 2,\r\n                      mb: 2,\r\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)', \r\n                      color: 'black', // dark font color\r\n                      borderColor: 'rgba(255, 255, 255, 0.5)', \r\n                    }}>\r\n                <Recommendations weatherData={weatherData[city.name]} variant=\"outlined\"/>\r\n                </Card>\r\n              </Box>\r\n            ) : (\r\n              <Typography variant=\"body2\">Weather data not available</Typography>\r\n            )}\r\n             </CardContent>\r\n             </Card>\r\n             </Grid>\r\n        ))}\r\n       </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CityList;\r\n","import \"./App.css\";\r\nimport WeatherCard from \"./components/WeatherCard\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\n//import { Box } from \"@mui/material\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport theme from \"../src/components/theme\";\r\nimport Navbar from \"./components/Navbar\";\r\n//import sky from \"./images/sky.jpg\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"; // Import BrowserRouter\r\n//import Home from \"./components/Home\";\r\nimport axios from \"axios\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CityList from \"./components/CityList\";\r\n\r\nfunction App() {\r\n  // State to track if the user is authenticated\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Verify the token on initial load (if token exists)\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        try {\r\n          const token = localStorage.getItem(\"token\");\r\n          const response = await axios.get(\r\n            \"http://localhost:5000/api/auth/verify\",\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n            }\r\n          );\r\n          if (response.status === 200) {\r\n            console.log(\"Token is valid\");\r\n            // Additional logic here\r\n          } else {\r\n            console.log(\"Token is invalid\");\r\n            // Handle error\r\n          }\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    verifyToken();\r\n  }, []);\r\n\r\n  // Handle user logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setIsAuthenticated(false);\r\n  };\r\n  return (\r\n    <Router>\r\n      {\" \"}\r\n      {/* Wrap your entire application with Router */}\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n\r\n        {/* <Box\r\n          className=\"sky\"\r\n          style={{\r\n            backgroundImage: `url(${sky})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n            minHeight: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            //alignItems: \"center\",\r\n          }}\r\n        > */}\r\n        {/* Pass authentication state to Navbar */}\r\n        <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} />\r\n        <Routes>\r\n          {/* Home route for login and signup */}\r\n          <Route path=\"/\" element={<WeatherCard />} />\r\n          {/* <Route path=\"/weather\" element={<WeatherCard />} /> */}\r\n          {/* Weather route, only accessible if authenticated */}\r\n          <Route\r\n            path=\"/login\"\r\n            element={<Login setIsAuthenticated={setIsAuthenticated} />}\r\n          />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route\r\n            path=\"/welcome\"\r\n            element={<Welcome />}\r\n            //element={isAuthenticated ? <Welcome /> : <Navigate to=\"/login\" />}\r\n          />\r\n          <Route\r\n            path=\"/cities\"\r\n            element={isAuthenticated ? <CityList /> : <Navigate to=\"/login\" />}\r\n          />\r\n        </Routes>\r\n        {/* </Box> */}\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/sky.a1e77f9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Clear.e91aea63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cloudy.c7900514.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Rainy.f04ec4b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.aebace38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.691c738c.png\";","module.exports = __webpack_public_path__ + \"static/media/Stormy.9a47bbd1.jpg\";"],"sourceRoot":""}